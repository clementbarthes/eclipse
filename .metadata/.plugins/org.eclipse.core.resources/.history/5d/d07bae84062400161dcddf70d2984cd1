/*
 * Lsm303d.cpp
 *
 *  Created on: May 27, 2016
 *      Author: developer
 */

#include "Lsm303d.h"
#include "I2c.h"


Lsm303d::Lsm303d() {
	this->i2c = i2c;
	i2c->address(accelAddress);
	i2c->writeReg(0x1F,0x40); // CTRL0 - FIFO enabled
	i2c->writeReg(0x20,0x77); // CTRL1 - 200Hz ODR for accel
	i2c->writeReg(0x21,0xC0); // CTRL2 - 50Hz AA - +/-2g accel
	i2c->writeReg(0x22,0x00); // CTRL3
	i2c->writeReg(0x23,0x00); // CTRL4
	i2c->writeReg(0x24,0x74); // CTRL5 - 100Hz ODR for magnetometer
	i2c->writeReg(0x25,0x00); // CTRL6 - +/-2 gauss scale
	i2c->writeReg(0x26,0x00); // CTRL7
	i2c->writeReg(0x2E,0x00); // FIFO-CTRL

}

float Lsm303d::readAccel(uint8_t accelDir) {
	union accelUnion {
		int16_t asInt;
		uint8_t asArray[2];
	} accelVal;

	i2c->address(Lsm303d::accelAddress);
	accelVal.asArray[0] = i2c->readReg(accelDir);
	accelVal.asArray[1] = i2c->readReg(accelDir|0x01);

	return (float)accelVal.asInt*0.00006103888;
}

float Lsm303d::readMagnet(uint8_t magnetDir) {
	union magnetUnion {
		int16_t asInt;
		uint8_t asArray[2];
	} magnetVal;

	i2c->address(Lsm303d::accelAddress);
	magnetVal.asArray[0] = i2c->readReg(magnetDir);
	magnetVal.asArray[1] = i2c->readReg(magnetDir|0x01);

	return (float)magnetVal.asInt*0.00006103888;
}

Lsm303d::~Lsm303d() {
	// TODO Auto-generated destructor stub
}
