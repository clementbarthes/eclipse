//============================================================================
// Name        : sampling.cpp
// Author      : Clement Barthes
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <signal.h>
#include <iostream>
#include <fstream>
#include <unistd.h>
#include <sys/time.h>
using namespace std;

void sigTimer_handler(int signum);

int main() {
	string gpio_filepath = "/sys/class/gpio/";
	string export_File = "export";
	string direction_File= "gpio67/direction";
	string gpio_File = "gpio67/value";
	ofstream setPinFileStream;
	// Export the pin
	setPinFileStream.open((gpio_filepath + export_File).c_str());
	setPinFileStream << "67";
	setPinFileStream.close();
	setPinFileStream.open((gpio_filepath + direction_File).c_str());

	ofstream gpio_fs;


	struct itimerval timer;
	/* Initial timeout value */
	timer.it_value.tv_sec = 1;  //in sec
	timer.it_value.tv_usec = 0; // in usec
	/* Repetitive timer */
	timer.it_interval.tv_sec = 1;  //in sec
	timer.it_interval.tv_usec = 0;

	signal(SIGALRM, &sigTimer_handler);
	printf("Timer: %i \n", setitimer(ITIMER_REAL, &timer, NULL));

	for (;;) {
		sleep(1);
	}
	return 0;
}


void sigTimer_handler(int signum){
	printf("Sample now! \n");
}
